<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>