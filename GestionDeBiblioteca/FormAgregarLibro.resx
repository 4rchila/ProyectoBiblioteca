<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>